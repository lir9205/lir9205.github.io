<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>李芮</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lir9205.github.io/"/>
  <updated>2019-07-17T09:41:10.000Z</updated>
  <id>https://lir9205.github.io/</id>
  
  <author>
    <name>qingtian</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>uni-app学习笔记</title>
    <link href="https://lir9205.github.io/2019/07/16/uni-app%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://lir9205.github.io/2019/07/16/uni-app学习笔记/</id>
    <published>2019-07-16T01:21:39.000Z</published>
    <updated>2019-07-17T09:41:10.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h1><h2 id="1-禁止蒙版下的页面滚动"><a href="#1-禁止蒙版下的页面滚动" class="headerlink" title="1. 禁止蒙版下的页面滚动"></a>1. 禁止蒙版下的页面滚动</h2><p> 若需要禁止蒙版下的页面滚动，可使用 <code>@touchmove.stop.prevent=&quot;moveHandle&quot;</code>，<code>moveHandle</code> 可以用来处理 <code>touchmove</code> 的事件，也可以是一个空函数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;view class=&quot;mask&quot; @touchmove.stop.prevent=&quot;moveHandle&quot;&gt;&lt;/view&gt;</span><br></pre></td></tr></table></figure><h2 id="2-注册全局组件"><a href="#2-注册全局组件" class="headerlink" title="2. 注册全局组件"></a>2. 注册全局组件</h2><p>uni-app 支持配置全局组件，需在 main.js 里进行全局注册，注册后就可在所有页面里使用该组件。</p><p>注意：Vue.component 的第一个参数必须是静态的字符串。</p><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &apos;vue&apos;</span><br><span class="line">import pageHead from &apos;./components/page-head.vue&apos;</span><br><span class="line">Vue.component(&apos;page-head&apos;,pageHead)</span><br></pre></td></tr></table></figure><p>index.vue 里可以直接使用组件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;view&gt;</span><br><span class="line">    &lt;page-head&gt;&lt;/page-head&gt;</span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h2 id="3-如何获取上个页面传递的数据"><a href="#3-如何获取上个页面传递的数据" class="headerlink" title="3. 如何获取上个页面传递的数据"></a>3. 如何获取上个页面传递的数据</h2><p>在 <code>onLoad</code> 里得到，<code>onLoad</code> 的参数是其他页面打开当前页面所传递的数据。</p><h2 id="4-如何设置全局的数据和全局的方法"><a href="#4-如何设置全局的数据和全局的方法" class="headerlink" title="4. 如何设置全局的数据和全局的方法"></a>4. 如何设置全局的数据和全局的方法</h2><p>uni-app 内置了 vuex ，在app里的使用，可参考hello-uniapp store/index.js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">//store.js</span><br><span class="line">import Vue from &apos;vue&apos;</span><br><span class="line">import Vuex from &apos;vuex&apos;</span><br><span class="line">Vue.use(Vuex)</span><br><span class="line">const store = new Vuex.Store(&#123;</span><br><span class="line">    state: &#123;...&#125;,</span><br><span class="line">    mutations: &#123;...&#125;,</span><br><span class="line">    actions: &#123;...&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">export default store</span><br><span class="line"></span><br><span class="line">//main.js</span><br><span class="line">...</span><br><span class="line">import store from &apos;./store&apos;</span><br><span class="line">Vue.prototype.$store = store</span><br><span class="line">const app = new Vue(&#123;</span><br><span class="line">    store,...</span><br><span class="line">&#125;)</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">//test.vue 使用时：</span><br><span class="line">import &#123;mapState,mapMutations&#125; from &apos;vuex&apos;</span><br></pre></td></tr></table></figure><h2 id="5-组件属性设置不生效解决办法"><a href="#5-组件属性设置不生效解决办法" class="headerlink" title="5. 组件属性设置不生效解决办法"></a>5. 组件属性设置不生效解决办法</h2><p>当重复设置某些属性为相同的值时，不会同步到view层。 例如：每次将scroll-view组件的scroll-top属性值设置为0，只有第一次能顺利返回顶部。 这和props的单向数据流特性有关，组件内部scroll-top的实际值改动后，其绑定的属性并不会一同变化。</p><p>解决办法有两种（以scroll-view组件为例）：</p><ul><li>监听scroll事件，记录组件内部变化的值，在设置新值之前先设置为记录的当前值</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;scroll-view :scroll-top=&quot;scrollTop&quot; scroll-y=&quot;true&quot; @scroll=&quot;scroll&quot;&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            scrollTop: 0,</span><br><span class="line">            old: &#123;</span><br><span class="line">                scrollTop: 0</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        scroll: function(e) &#123;</span><br><span class="line">            this.old.scrollTop = e.detail.scrollTop</span><br><span class="line">        &#125;,</span><br><span class="line">        goTop: function(e) &#123;</span><br><span class="line">            this.scrollTop = this.old.scrollTop</span><br><span class="line">            this.$nextTick(function() &#123;</span><br><span class="line">                this.scrollTop = 0</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>监听scroll事件，获取组件内部变化的值，实时更新其绑定值</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;scroll-view :scroll-top=&quot;scrollTop&quot; scroll-y=&quot;true&quot; @scroll=&quot;scroll&quot;&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            scrollTop: 0,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        scroll: function(e) &#123;</span><br><span class="line">            this.scrollTop = e.detail.scrollTop</span><br><span class="line">        &#125;,</span><br><span class="line">        goTop: function(e) &#123;</span><br><span class="line">            this.scrollTop = 0</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二种解决方式在某些组件可能造成抖动，推荐第一种解决方式。</p><h2 id="6-运行环境判断"><a href="#6-运行环境判断" class="headerlink" title="6. 运行环境判断"></a>6. 运行环境判断</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if (process.env.NODE_ENV === &apos;development&apos;) &#123;</span><br><span class="line">console.log(&apos;开发环境&apos;)</span><br><span class="line">&#125; else &#123;</span><br><span class="line">console.log(&apos;生产环境&apos;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-运行平台判断"><a href="#7-运行平台判断" class="headerlink" title="7. 运行平台判断"></a>7. 运行平台判断</h2><p>平台判断有2种场景，一种是在编译期判断，一种是在运行期判断。</p><h3 id="7-1-编译期判断"><a href="#7-1-编译期判断" class="headerlink" title="7.1 编译期判断"></a>7.1 编译期判断</h3><p>编译期判断，即条件编译，不同平台在编译出包后已经是不同的代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// #ifdef H5</span><br><span class="line">alert(&apos;只有h5平台才有alert方法&apos;);</span><br><span class="line">// #endif</span><br><span class="line"></span><br><span class="line">   // 如上代码只会编译到H5的发行包里，其他平台的包不会包含如上代码。</span><br></pre></td></tr></table></figure><h3 id="7-2-运行期判断"><a href="#7-2-运行期判断" class="headerlink" title="7.2 运行期判断"></a>7.2 运行期判断</h3><p>运行期判断是指代码已经打入包中，仍然需要在运行期判断平台，此时可使用 uni.getSystemInfoSync().platform 判断客户端环境是 Android、iOS 还是小程序开发工具（在百度小程序开发工具、微信小程序开发工具、支付宝小程序开发工具中使用 uni.getSystemInfoSync().platform 返回值均为 devtools）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">switch (uni.getSystemInfoSync().platform) &#123;</span><br><span class="line">case &apos;android&apos;:</span><br><span class="line">console.log(&apos;运行在Android上&apos;);</span><br><span class="line">break;</span><br><span class="line">case &apos;ios&apos;:</span><br><span class="line">console.log(&apos;运行在iOS上&apos;);</span><br><span class="line">break;</span><br><span class="line">default: //&apos;devtools&apos;</span><br><span class="line">console.log(&apos;运行在开发者工具上&apos;);</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;tips&quot;&gt;&lt;a href=&quot;#tips&quot; class=&quot;headerlink&quot; title=&quot;tips&quot;&gt;&lt;/a&gt;tips&lt;/h1&gt;&lt;h2 id=&quot;1-禁止蒙版下的页面滚动&quot;&gt;&lt;a href=&quot;#1-禁止蒙版下的页面滚动&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
      <category term="uni-app" scheme="https://lir9205.github.io/categories/uni-app/"/>
    
    
      <category term="vue 小程序 uni-app" scheme="https://lir9205.github.io/tags/vue-%E5%B0%8F%E7%A8%8B%E5%BA%8F-uni-app/"/>
    
  </entry>
  
  <entry>
    <title>小程序初学笔记</title>
    <link href="https://lir9205.github.io/2019/07/02/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%88%9D%E5%AD%A6%E7%AC%94%E8%AE%B0/"/>
    <id>https://lir9205.github.io/2019/07/02/小程序初学笔记/</id>
    <published>2019-07-02T05:34:44.000Z</published>
    <updated>2019-07-13T10:02:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>#geoJSON 获取地址</p><ol><li><a href="http://datav.aliyun.com/tools/atlas/#&lat=33.521903996156105&lng=104.29849999999999&zoom=4" target="_blank" rel="noopener">地图选择器</a></li><li><a href="http://geojson.io/#map=11/30.2282/119.6092" target="_blank" rel="noopener">geojson.io</a> 可以通过绘制范围生成geojson数据</li><li><a href="https://mapshaper.org/" target="_blank" rel="noopener">shp文件在线转geojson</a></li></ol><p>#博客</p><h3 id="基于hexo-github搭建一个独立博客"><a href="#基于hexo-github搭建一个独立博客" class="headerlink" title="基于hexo+github搭建一个独立博客"></a>基于hexo+github搭建一个独立博客</h3><p><a href="https://www.cnblogs.com/MuYunyun/p/5927491.html" target="_blank" rel="noopener">https://www.cnblogs.com/MuYunyun/p/5927491.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#geoJSON 获取地址&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://datav.aliyun.com/tools/atlas/#&amp;lat=33.521903996156105&amp;lng=104.29849999999999&amp;zoom=4&quot; target=&quot;_
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>前端tips</title>
    <link href="https://lir9205.github.io/2019/06/14/%E5%89%8D%E7%AB%AFtips/"/>
    <id>https://lir9205.github.io/2019/06/14/前端tips/</id>
    <published>2019-06-14T07:37:01.000Z</published>
    <updated>2019-07-23T08:47:55.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="jquery控制input只能输入数字和两位小数"><a href="#jquery控制input只能输入数字和两位小数" class="headerlink" title="jquery控制input只能输入数字和两位小数"></a>jquery控制input只能输入数字和两位小数</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function num(obj)&#123;</span><br><span class="line">obj.value = obj.value.replace(/[^\d.]/g,&quot;&quot;); //清除&quot;数字&quot;和&quot;.&quot;以外的字符</span><br><span class="line">obj.value = obj.value.replace(/^\./g,&quot;&quot;); //验证第一个字符是数字</span><br><span class="line">obj.value = obj.value.replace(/\.&#123;2,&#125;/g,&quot;.&quot;); //只保留第一个, 清除多余的</span><br><span class="line">obj.value = obj.value.replace(&quot;.&quot;,&quot;$#$&quot;).replace(/\./g,&quot;&quot;).replace(&quot;$#$&quot;,&quot;.&quot;);</span><br><span class="line">obj.value = obj.value.replace(/^(\-)*(\d+)\.(\d\d).*$/,&apos;$1$2.$3&apos;); //只能输入两个小数</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>限制只能保留两位小数点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;text&quot; onkeyup=&quot;num(this)&quot; size=&quot;10&quot;/&gt;元</span><br></pre></td></tr></table></figure><p>限制只能输入数字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;text&quot; onkeyup=&apos;this.value=this.value.replace(/\D/gi,&quot;&quot;)&apos;/&gt;</span><br></pre></td></tr></table></figure><p>限制只能输入数字、字母和”-“</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;text&quot; onkeyup=&apos;value=value.replace(/[^A-Za-z0-9\-]+/g,&quot;&quot;)&apos;/&gt;</span><br></pre></td></tr></table></figure><h1 id="完美解决-ios10-及以上-Safari-无法禁止缩放的问题"><a href="#完美解决-ios10-及以上-Safari-无法禁止缩放的问题" class="headerlink" title="完美解决 ios10 及以上 Safari 无法禁止缩放的问题"></a>完美解决 ios10 及以上 Safari 无法禁止缩放的问题</h1><p>移动端web缩放有两种：</p><ol><li>双击缩放</li><li>双指手势缩放</li></ol><p>在 iOS 10之前，iOS 和 Android 都可以通过一行 meta 标签来禁止页面缩放： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta content=&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0;&quot; name=&quot;viewport&quot; /&gt;</span><br></pre></td></tr></table></figure><p>但 iOS 10开始，meta 设置在 Safari 内无效了。</p><p>在网上看到一个解决方案：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">window.οnlοad=function () &#123;</span><br><span class="line">    document.addEventListener(&apos;touchstart&apos;,function (event) &#123;</span><br><span class="line">        if(event.touches.length&gt;1)&#123;</span><br><span class="line">            event.preventDefault();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    var lastTouchEnd=0;</span><br><span class="line">    document.addEventListener(&apos;touchend&apos;,function (event) &#123;</span><br><span class="line">        var now=(new Date()).getTime();</span><br><span class="line">        if(now-lastTouchEnd&lt;=300)&#123;</span><br><span class="line">            event.preventDefault();</span><br><span class="line">        &#125;</span><br><span class="line">        lastTouchEnd=now;</span><br><span class="line">    &#125;,false)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>经过测试，这种方法只能禁止双击缩放。只好继续找解决方案了。</p><p>原来在 iOS 里有一组双指手势操作的事件：<code>gesturestart</code>、<code>gesturechange</code>、<code>gestureend</code><br>在上面的 js 方法里加入下面的事件监听：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">document.addEventListener(&apos;gesturestart&apos;, function (event) &#123;</span><br><span class="line">    event.preventDefault();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>既不能双击缩放，也不能双指缩放。</p><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">window.onload = function() &#123;</span><br><span class="line">    // 阻止双击放大</span><br><span class="line">    var lastTouchEnd = 0;</span><br><span class="line">    document.addEventListener(&apos;touchstart&apos;, function(event) &#123;</span><br><span class="line">        if (event.touches.length &gt; 1) &#123;</span><br><span class="line">            event.preventDefault();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    document.addEventListener(&apos;touchend&apos;, function(event) &#123;</span><br><span class="line">        var now = (new Date()).getTime();</span><br><span class="line">        if (now - lastTouchEnd &lt;= 300) &#123;</span><br><span class="line">            event.preventDefault();</span><br><span class="line">        &#125;</span><br><span class="line">        lastTouchEnd = now;</span><br><span class="line">    &#125;, false);</span><br><span class="line"></span><br><span class="line">    // 阻止双指放大</span><br><span class="line">    document.addEventListener(&apos;gesturestart&apos;, function(event) &#123;</span><br><span class="line">        event.preventDefault();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;jquery控制input只能输入数字和两位小数&quot;&gt;&lt;a href=&quot;#jquery控制input只能输入数字和两位小数&quot; class=&quot;headerlink&quot; title=&quot;jquery控制input只能输入数字和两位小数&quot;&gt;&lt;/a&gt;jquery控制input只
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>vim</title>
    <link href="https://lir9205.github.io/2019/06/14/vim/"/>
    <id>https://lir9205.github.io/2019/06/14/vim/</id>
    <published>2019-06-14T07:12:36.000Z</published>
    <updated>2019-07-02T01:31:54.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/MuYunyun/p/5927491.html" target="_blank" rel="noopener">基于hexo+github搭建一个独立博客</a></p><h1 id="vim退出命令"><a href="#vim退出命令" class="headerlink" title="vim退出命令"></a>vim退出命令</h1><p>注意：这些命令前面都有一个冒号：</p><p>当编辑完文档，准备退出Vi返回到shell时，能够使用以下几种方法之一。</p><h2 id="在命令模式中"><a href="#在命令模式中" class="headerlink" title="在命令模式中"></a>在命令模式中</h2><h3 id="ZZ"><a href="#ZZ" class="headerlink" title=":ZZ"></a>:ZZ</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:ZZ</span><br></pre></td></tr></table></figure><p>连按两次大写字母Z，若当前编辑的文档曾被修改过，则Vi保存该文档后退出，返回到shell；若当前编辑的文档没被修改过，则Vi直接退出, 返回到shell。</p><hr><h2 id="在末行模式下"><a href="#在末行模式下" class="headerlink" title="在末行模式下"></a>在末行模式下</h2><h3 id="w"><a href="#w" class="headerlink" title=":w"></a>:w</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:w</span><br></pre></td></tr></table></figure><p>Vi保存当前编辑文档，但并不退出，而是继续等待用户输入命令。在使用w命令时，能够再给编辑文档起一个新的文档名。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:w newfile</span><br></pre></td></tr></table></figure><p>此时Vi将把当前文档的内容保存到指定的newfile中，而原有文档保持不变。若newfile是个已存在的文档，则Vi在显示窗口的状态行给出提示信息：</p><pre><code>File exists （use ! to override）</code></pre><p>此时，若用户真的希望用文档的当前内容替换newfile中原有内容，可使用命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:w! newfile</span><br></pre></td></tr></table></figure><p>否则可选择另外的文档名来保存当前文档。</p><h3 id="q"><a href="#q" class="headerlink" title=":q"></a>:q</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:q</span><br></pre></td></tr></table></figure><p>系统退出Vi返回到shell。若在用此命令退出Vi时，编辑文档没有被保存，则Vi在显示窗口的最末行显示如下信息：</p><blockquote><p>No write since last change （use ! to overrides）</p></blockquote><p>提示用户该文档被修改后没有保存，然后Vi并不退出，继续等待用户命令。若用户就是不想保存被修改后的文档而要强行退出Vi时，可使用命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:q!</span><br></pre></td></tr></table></figure><p>Vi放弃所作修改而直接退到shell下。</p><h3 id="wq"><a href="#wq" class="headerlink" title=":wq"></a>:wq</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:wq</span><br></pre></td></tr></table></figure><p>Vi将先保存文档，然后退出Vi返回到shell。</p><h3 id="x"><a href="#x" class="headerlink" title=":x"></a>:x</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:x</span><br></pre></td></tr></table></figure><p>该命令的功能同命令模式下的ZZ命令功能相同。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/MuYunyun/p/5927491.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;基于hexo+github搭建一个独立博客&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;vim退出命令&quot;&gt;&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>gulp4.0+ 执行 gulp 命令报错记录</title>
    <link href="https://lir9205.github.io/2019/06/12/gulp%E7%9B%B8%E5%85%B3/"/>
    <id>https://lir9205.github.io/2019/06/12/gulp相关/</id>
    <published>2019-06-12T09:05:01.000Z</published>
    <updated>2019-07-02T01:31:54.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-Task-function-must-be-specified"><a href="#1-Task-function-must-be-specified" class="headerlink" title="1. Task function must be specified"></a>1. Task function must be specified</h1><p>在执行 <code>$ gulp</code> 命令时控制台报错：</p><pre><code>Task function must be specified</code></pre><p>解决方法：</p><p>使用<code>$ gulp -v</code> 查看 <i>gulp</i> 的 <i>Local version</i> 版本和 <i>package.json</i> 里面的版本是否相同</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ gulp -v</span><br><span class="line">CLI version: 2.2.0</span><br><span class="line">Local version: 4.0.2</span><br></pre></td></tr></table></figure><p><i>package.json</i>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span>: <span class="string">"hexo-site"</span>, </span><br><span class="line">  <span class="string">"version"</span>: <span class="string">"0.0.0"</span>,</span><br><span class="line">  <span class="string">"private"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">"hexo"</span>: &#123;</span><br><span class="line">    <span class="string">"version"</span>: <span class="string">"3.8.0"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="string">"ejs"</span>: <span class="string">"^2.6.1"</span>,</span><br><span class="line">    <span class="string">"hexo"</span>: <span class="string">"^3.8.0"</span>,</span><br><span class="line">    <span class="string">"hexo-abbrlink"</span>: <span class="string">"^2.0.5"</span>,</span><br><span class="line">    <span class="string">"hexo-deployer-git"</span>: <span class="string">"^1.0.0"</span>,</span><br><span class="line">    <span class="string">"hexo-generator-archive"</span>: <span class="string">"^0.1.5"</span>,</span><br><span class="line">    <span class="string">"hexo-generator-category"</span>: <span class="string">"^0.1.3"</span>,</span><br><span class="line">    <span class="string">"hexo-generator-feed"</span>: <span class="string">"^1.2.2"</span>,</span><br><span class="line">    <span class="string">"hexo-generator-index"</span>: <span class="string">"^0.2.1"</span>,</span><br><span class="line">    <span class="string">"hexo-generator-json-content"</span>: <span class="string">"^4.1.3"</span>,</span><br><span class="line">    <span class="string">"hexo-generator-sitemap"</span>: <span class="string">"^1.2.0"</span>,</span><br><span class="line">    <span class="string">"hexo-generator-tag"</span>: <span class="string">"^0.2.0"</span>,</span><br><span class="line">    <span class="string">"hexo-renderer-ejs"</span>: <span class="string">"^0.3.1"</span>,</span><br><span class="line">    <span class="string">"hexo-renderer-marked"</span>: <span class="string">"^1.0.1"</span>,</span><br><span class="line">    <span class="string">"hexo-server"</span>: <span class="string">"^0.3.3"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="string">"gulp"</span>: <span class="string">"^4.0.2"</span>,</span><br><span class="line">    <span class="string">"gulp-autoprefixer"</span>: <span class="string">"^6.1.0"</span>,</span><br><span class="line">    <span class="string">"gulp-htmlclean"</span>: <span class="string">"^2.7.22"</span>,</span><br><span class="line">    <span class="string">"gulp-htmlmin"</span>: <span class="string">"^5.0.1"</span>,</span><br><span class="line">    <span class="string">"gulp-jshint"</span>: <span class="string">"^2.1.0"</span>,</span><br><span class="line">    <span class="string">"gulp-less"</span>: <span class="string">"^4.0.1"</span>,</span><br><span class="line">    <span class="string">"gulp-minify-css"</span>: <span class="string">"^1.2.4"</span>,</span><br><span class="line">    <span class="string">"gulp-notify"</span>: <span class="string">"^3.2.0"</span>,</span><br><span class="line">    <span class="string">"gulp-path"</span>: <span class="string">"^4.0.0"</span>,</span><br><span class="line">    <span class="string">"gulp-plumber"</span>: <span class="string">"^1.2.1"</span>,</span><br><span class="line">    <span class="string">"gulp-rename"</span>: <span class="string">"^1.4.0"</span>,</span><br><span class="line">    <span class="string">"gulp-rev-append"</span>: <span class="string">"^0.1.8"</span>,</span><br><span class="line">    <span class="string">"gulp-sequence"</span>: <span class="string">"^1.0.0"</span>,</span><br><span class="line">    <span class="string">"gulp-uglify"</span>: <span class="string">"^3.0.2"</span>,</span><br><span class="line">    <span class="string">"gulp-watch"</span>: <span class="string">"^5.0.1"</span>,</span><br><span class="line">    <span class="string">"jshint"</span>: <span class="string">"^2.10.2"</span>,</span><br><span class="line">    <span class="string">"jshint-stylish"</span>: <span class="string">"^2.2.1"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><i>gulp 3</i> 和 <i>gulp 4</i> 运行方式是不一样的，所以会出现错误。<br><i>gulp 3</i>，如果有一个任务A，B和C的列表，你想在一个序列中运行（确保A在B开始之前完成，而B在C开始之前完成），代码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'a'</span>, <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">  // Do something.</span><br><span class="line">&#125;);</span><br><span class="line">gulp.task(<span class="string">'b'</span>, [<span class="string">'a'</span>], <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">  // Do some stuff.</span><br><span class="line">&#125;);</span><br><span class="line">gulp.task(<span class="string">'c'</span>, [<span class="string">'b'</span>], <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">    // Do some more stuff.</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><i>gulp 4</i>最大的变化就是你不能像以前那样传递一个依赖任务列表。否则会得到以下错误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">assert.js:42</span><br><span class="line">  throw new errors.AssertionError(&#123;</span><br><span class="line">  ^</span><br><span class="line"></span><br><span class="line">AssertionError [ERR_ASSERTION]: Task <span class="keyword">function</span> must be specified</span><br><span class="line">    at Gulp.set [as _setTask] (/Users/yscredit/Desktop/myBlog/node_modules/_undertaker@1.2.1@undertaker/lib/<span class="built_in">set</span>-task.js:10:3)</span><br><span class="line">    at Gulp.task (/Users/yscredit/Desktop/myBlog/node_modules/_undertaker@1.2.1@undertaker/lib/task.js:13:8)</span><br><span class="line">    at Object.&lt;anonymous&gt; (/Users/yscredit/Desktop/myBlog/themes/hexo-theme-snippet/gulpfile.js:105:10)</span><br><span class="line">    at Module._compile (module.js:652:30)</span><br><span class="line">    at Object.Module._extensions..js (module.js:663:10)</span><br><span class="line">    at Module.load (module.js:565:32)</span><br><span class="line">    at tryModuleLoad (module.js:505:12)</span><br><span class="line">    at Function.Module._load (module.js:497:3)</span><br><span class="line">    at Module.require (module.js:596:17)</span><br><span class="line">    at require (internal/module.js:11:18)</span><br></pre></td></tr></table></figure><p>你需要使用 <i>gulp.series</i> 和 <i>gulp.parallel</i>，因为 <i>gulp</i> 任务现在只有两个参数。</p><ul><li><b>gulp.series</b>：按照顺序执行</li><li><b>gulp.paralle</b>：可以并行计算<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'my-tasks'</span>, gulp.series(<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">  // Do something after a, b, and c are finished.</span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'build'</span>, gulp.parallel(<span class="string">'styles'</span>, <span class="string">'scripts'</span>, <span class="string">'images'</span>, <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">  // Build the website.</span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line">&lt;!-- 或者这样 --&gt;</span><br><span class="line">gulp.task(<span class="string">'my-tasks'</span>, gulp.series(<span class="string">'a'</span>, gulp.parallel(<span class="string">'styles'</span>,<span class="string">'scripts'</span>, <span class="string">'images'</span>), <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">  // Do something after a, b, and c are finished.</span><br><span class="line">&#125;));</span><br></pre></td></tr></table></figure></li></ul><p>相关任务必须在被调用之前发生。</p><h1 id="2-The-following-tasks-did-not-complete-default-Did-you-forget-to-signal-async-completion"><a href="#2-The-following-tasks-did-not-complete-default-Did-you-forget-to-signal-async-completion" class="headerlink" title="2. The following tasks did not complete: default,Did you forget to signal async completion?"></a>2. The following tasks did not complete: default,Did you forget to signal async completion?</h1><p>当 <i>gulp</i> 为如下代码的时候：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//  以下代码会执行在node环境下</span><br><span class="line">const gulp = require( <span class="string">"gulp"</span> );</span><br><span class="line"></span><br><span class="line">//  创建一个gulp的任务</span><br><span class="line">gulp.task( <span class="string">"default"</span>,<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">    console.log( <span class="string">"gulp default task"</span> );</span><br><span class="line">&#125; );</span><br></pre></td></tr></table></figure><p>执行 <code>$ gulp</code> 打印：</p><p>  The following tasks did not complete: default, <anonymous><br>Did you forget to signal async completion?</anonymous></p><h3 id="使用-async-和-await-解决"><a href="#使用-async-和-await-解决" class="headerlink" title="使用 async 和 await 解决"></a>使用 <i>async</i> 和 <i>await</i> 解决</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//  以下代码会执行在node环境下</span><br><span class="line">const gulp = require( <span class="string">"gulp"</span> );</span><br><span class="line"></span><br><span class="line">//  创建一个gulp的任务</span><br><span class="line">gulp.task( <span class="string">"default"</span>,async() =&gt; &#123;</span><br><span class="line">    console.log( <span class="string">"gulp default task"</span> );</span><br><span class="line">&#125; );</span><br></pre></td></tr></table></figure><h3 id="官方解决办法"><a href="#官方解决办法" class="headerlink" title="官方解决办法"></a>官方解决办法</h3><p>在不使用文件流的情况下，向 <i>task</i> 的函数里传入一个名叫 <i>done</i> 的回调函数，以结束 <i>task</i>，如下代码所示:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//  以下代码会执行在node环境下</span><br><span class="line">const gulp = require( <span class="string">"gulp"</span> );</span><br><span class="line"></span><br><span class="line">//  创建一个gulp的任务</span><br><span class="line">gulp.task( <span class="string">"default"</span>,<span class="keyword">function</span>(<span class="keyword">done</span>)&#123;</span><br><span class="line">    console.log( <span class="string">"gulp default task"</span> );</span><br><span class="line">    <span class="keyword">done</span>();</span><br><span class="line">&#125; );</span><br></pre></td></tr></table></figure><p> <i>done</i> 回调函数的作用是在 <i>task</i> 完成时通知 <i>gulp</i> （而不是返回一个流），而 <i>task</i> 里的所有其他功能都纯粹依赖 <i>Node</i> 来实现。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-Task-function-must-be-specified&quot;&gt;&lt;a href=&quot;#1-Task-function-must-be-specified&quot; class=&quot;headerlink&quot; title=&quot;1. Task function must be s
      
    
    </summary>
    
    
      <category term="gulp" scheme="https://lir9205.github.io/tags/gulp/"/>
    
  </entry>
  
  <entry>
    <title>npm安装package.json中的模块依赖</title>
    <link href="https://lir9205.github.io/2019/06/12/postName/"/>
    <id>https://lir9205.github.io/2019/06/12/postName/</id>
    <published>2019-06-12T03:35:01.000Z</published>
    <updated>2019-07-02T01:31:54.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="package有两种依赖"><a href="#package有两种依赖" class="headerlink" title="package有两种依赖"></a>package有两种依赖</h1><ul><li><p>dependencies —— 运行依赖，依赖的项该是正常运行该包时所需要的依赖项</p></li><li><p>devDependencies —— 开发依赖，开发的时候需要的依赖项，像一些进行单元测试之类的包。</p></li></ul><h1 id="安装依赖命令"><a href="#安装依赖命令" class="headerlink" title="安装依赖命令"></a>安装依赖命令</h1><p>npm一键安装package.json里的所有依赖文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>只安装package.json里的dependencies（运行依赖）文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --dependencies</span><br></pre></td></tr></table></figure><p>只安装package.json里的devDependencies（开发依赖）文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --devDependencies</span><br></pre></td></tr></table></figure><h1 id="更新依赖包到最新版本"><a href="#更新依赖包到最新版本" class="headerlink" title="更新依赖包到最新版本"></a>更新依赖包到最新版本</h1><p>安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo npm install -g npm-check-updates</span><br></pre></td></tr></table></figure><p>使用：<br>检查package.json中依赖包的最新版本，在package.json所在目录执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ncu</span><br></pre></td></tr></table></figure><p>更新依赖包到最新版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ncu -u</span><br></pre></td></tr></table></figure><p>更新全部依赖包到最新版本(包括当前指定版本范围满足最新版本号的,比如^4.2.0 -&gt; ^4.3.0)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ncu -a</span><br></pre></td></tr></table></figure><p>最后再执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;package有两种依赖&quot;&gt;&lt;a href=&quot;#package有两种依赖&quot; class=&quot;headerlink&quot; title=&quot;package有两种依赖&quot;&gt;&lt;/a&gt;package有两种依赖&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;dependencies —— 运行依赖，
      
    
    </summary>
    
    
      <category term="npm" scheme="https://lir9205.github.io/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://lir9205.github.io/2019/06/12/hello-world/"/>
    <id>https://lir9205.github.io/2019/06/12/hello-world/</id>
    <published>2019-06-12T02:49:40.000Z</published>
    <updated>2019-07-02T01:31:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
